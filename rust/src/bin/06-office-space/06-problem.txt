Office Space (due 23 Sep 2019)
The company that you work for is moving to a larger building. The new office is rectangular and will be subdivided into cubicles. Your employees want to request particular positions for their cubicles. You want to set up a system that lets them make their requests.

You have expressed the new office space as a coordinate system where each unit is one foot. The south-west corner of this space is assigned the coordinate (0, 0). The positive X axis is aligned with the inner edge of the building's south wall. The positive Y axis is aligned with the west wall. Employees request a position for their cubicle by giving the coordinates of the cubicle's south-west corner and the cubicle's north-east corner.



Input: Input consists of up to 10 test cases. Each case starts with a line containing a pair of integers w and h giving the size of the new office space (w is the number of feet west-to-east, h is the number of feet south-to-north). Both of these numbers are in the range 1 to 100.

After this is a line containing an integer n between 1 and 20 inclusive, giving the number of employees you have. Following this are n cubicle placement requests, one per line.

Each request starts with the name of the employee. The name is a string of 1 to 20 characters (mix of upper and lower case letters a-z, no spaces). The name is followed by four integers x1, y1, x2, y2 where (x1, y1) indicate the coordinates of the south-west corner of the desired cubicle and (x2, y2) indicate the coordinates of the north-east corner. Each set of request coordinates satisfies 0 ≤ x1 ≤ x2 ≤ w and 0 ≤ y1 ≤ y2 ≤ h. The sequence of test cases ends at the end of file.

Output: For each test case, print out a report that starts with the total number of square feet in the building and the number of square feet that no employee has requested (the unallocated space).

Next give the total number of square feet that are contested because more than one empoyee has requested the same region of the floor.

Finally, for each employee give the number of square feet that that employee can be guaranteed to have. This is the total area that they requested minus any regions that were requested by another employee.

List the employees in the same order they were given in the input. Leave a blank line after the output for each test case.

The input file will be called office.txt. It will have the following format:

33 26
3
Alice 2 3 10 11
Ted 7 2 18 8
GreedyBob 17 11 30 24
20 10
2
Employee1 0 0 9 10
Employee2 11 0 20 10
Your output will be on the console and must have the following format:

Total 858
Unallocated 574
Contested 15
Alice 49
Ted 51
GreedyBob 169

Total 200
Unallocated 20
Contested 0
Employee1 90
Employee2 90
For this assignment you may work with a partner. Both of you must read the paper on Pair Programming. .

We will be looking at documentation, descriptive variable and function names, clean logical structure, and adherence to the coding conventions discussed in class. The file will have a header of the following form:

#  File: OfficeSpace.py

#  Description:

#  Student Name:

#  Student UT EID:

#  Partner Name:

#  Partner UT EID:

#  Course Name: CS 313E

#  Unique Number:

#  Date Created:

#  Date Last Modified:
If you are working with a partner both of you will be submitting the same program from both accounts but make sure that you have your partner's name and eid in your program. If you are working alone, then remove the two lines that has the partner's name and eid in the header.

Use the Canvas system to to submit your OfficeSpace.py file. We should receive your work by 11 PM on Monday, 23 Sep 2019. There will be substantial penalties if you do not adhere to the guidelines. Remember Python is case sensitive. The name of your file must match exactly what we have specified.

Your Python program should have the header with the proper documentation.
Your code must run before submission.
You should be submitting your file through the web based Canvas program. We will not accept files e-mailed to us.
Here is the Grading Criteria.
This problem was taken from Kattis.